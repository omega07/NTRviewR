import React, { useState, useRef, useEffect } from 'react';
import '../styles/Home.css';
import {Button, Modal} from '@material-ui/core';
import UUID from 'uuidjs';
import 'boxicons';
import {useHistory} from 'react-router-dom';


const Home = ({userID, username, setUserID, setUsername, setActiveUsers, socket}) => {
    const [showModal, setShowModal] = useState(false);
    const [roomIDError, setRoomIDError] = useState('');
    const [roomID, setRoomID] = useState('');
    const [usernameModal, setUsernameModal] = useState(false);
    const [createRoom, setCreateRoom] = useState('Create Room');
    const [joinRoom, setJoinRoom] = useState('Join Room');
    const input_username = useRef();
    const room_ID = useRef('');
    const history = useHistory();
    useEffect(() => {
        setUserID(null);
        setUsername('');
        setUsernameModal(false);
    }, [])

    const handleUsernameChange = e => {
        setUsername(e.target.value);
    }

    const handleClose = () => {
        if(username.length === 0) {
            setUsernameModal(true);
        }
        else {
            setUsernameModal(false);
            socket.emit('join-room', {"user":userID, "roomID":roomID, "name":username});
            history.push(`/room/${roomID}`);
        }
    }

    const body = (
        <>
            <div ref={input_username} className="modal_for_input">
                <input autoFocus={true} className="input_for_username" placeholder="Enter your username!" onChange={handleUsernameChange} type="text"/>
                <button className="input_username_btn" onClick={handleClose}>Ok!</button>
            </div>
        </>
    );
    

    const handleCreateRoom = e => {
        setCreateRoom('Creating Room...')
        // create room
        setRoomID(UUID.generate());

        //set username and userid
        const uuid = UUID.generate();
        setUserID(uuid);
        setUsernameModal(true);
    }

    const handleJoinRoom = e => {
        if(!room_ID.current.value || room_ID.current.value.length === 0) setRoomIDError(<p className="home__roomIDError"><box-icon size="s" name="error"></box-icon>Enter a room ID to join a room!</p>)
        else {
            setJoinRoom('Joining Room...');
            setRoomIDError('');
            // join room
            setRoomID(room_ID.current.value);
            //set username and userid
            const uuid = UUID.generate();
            setUserID(uuid);
            setUsernameModal(true);
        }
    }

    return (
        <>
            <Modal open={usernameModal} onClose={handleClose}>
              {body}
            </Modal>
            <div className="homex">
                <div className="home">
                    <button className="btn__createroom" onClick={handleCreateRoom}>{createRoom}</button>
                    <p className="home__or">OR</p>
                    <div className="home__joinroom">
                        <div className="roominput">
                            <input ref={room_ID} className="home__roominput" type="text" placeholder="Enter Room ID"/>
                            {roomIDError}
                        </div>
                        <button className="btn__joinroom" onClick={handleJoinRoom}>{joinRoom}</button>
                    </div>
                </div>
                <div className="home__introduction"><p><svg width="111" height="20" viewBox="0 0 111 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                            <path d="M9.428 3.6C9.89733 3.36533 10.3887 3.248 10.902 3.248C11.43 3.248 11.8553 3.40933 12.178 3.732C12.5153 4.05467 12.684 4.44333 12.684 4.898C12.684 5.35267 12.618 6.35733 12.486 7.912C12.354 9.452 12.288 10.6767 12.288 11.586C12.288 14.5047 12.42 16.932 12.684 18.868C12.2147 19.044 11.6867 19.132 11.1 19.132C10.528 19.132 10.0807 19.0367 9.758 18.846C8.81933 18.3033 6.62667 14.8713 3.18 8.55C3.12133 9.122 3.092 10.464 3.092 12.576C3.092 14.6733 3.25333 16.7267 3.576 18.736C3.12133 18.912 2.63 19 2.102 19C1.574 19 1.14133 18.8313 0.804 18.494C0.481333 18.1567 0.32 17.7533 0.32 17.284C0.32 16.8147 0.386 15.832 0.518 14.336C0.664667 12.84 0.738 11.7107 0.738 10.948C0.738 8.02933 0.598667 5.60933 0.32 3.688C0.730667 3.48267 1.332 3.38 2.124 3.38C2.916 3.38 3.47333 3.69533 3.796 4.326C5.96667 8.74067 8.042 12.4807 10.022 15.546C9.978 12.73 9.956 11.2413 9.956 11.08C9.956 8.33733 9.78 5.844 9.428 3.6ZM15.5443 3.314L20.1863 3.38C22.5917 3.38 24.3517 3.292 25.4663 3.116C25.6277 3.424 25.7083 3.776 25.7083 4.172C25.7083 4.568 25.5323 4.92733 25.1803 5.25C24.8283 5.558 24.403 5.712 23.9043 5.712L21.3743 5.426C21.3743 5.52867 21.3377 5.98333 21.2643 6.79C21.059 8.77 20.9563 10.7573 20.9563 12.752C20.9563 14.7467 21.1103 16.7413 21.4183 18.736C20.9343 18.912 20.4283 19 19.9003 19C19.3723 19 18.9177 18.8533 18.5363 18.56C18.155 18.252 17.9643 17.7973 17.9643 17.196C17.9643 16.58 18.0377 15.502 18.1843 13.962C18.331 12.422 18.4043 10.926 18.4043 9.474C18.4043 8.00733 18.331 6.64333 18.1843 5.382C16.4097 5.47 15.0237 5.71933 14.0263 6.13C13.8503 5.79267 13.7623 5.41867 13.7623 5.008C13.7623 4.58267 13.931 4.194 14.2683 3.842C14.6057 3.49 15.031 3.314 15.5443 3.314ZM34.085 11.52C34.745 12.9133 35.581 14.1307 36.593 15.172C37.605 16.2133 38.6097 16.888 39.607 17.196C39.607 17.812 39.4457 18.2887 39.123 18.626C38.8003 18.9633 38.3384 19.132 37.737 19.132C36.9597 19.132 36.0723 18.6333 35.075 17.636C34.0777 16.624 33.205 15.436 32.457 14.072C31.7237 12.6933 31.291 11.4833 31.159 10.442C32.215 10.442 33.0803 10.1633 33.755 9.606C34.4443 9.034 34.789 8.22733 34.789 7.186C34.789 5.866 33.9677 5.206 32.325 5.206C31.797 5.206 31.1517 5.294 30.389 5.47C30.2863 7.45 30.235 9.04867 30.235 10.266C30.235 14.1673 30.389 16.9907 30.697 18.736C30.2277 18.912 29.729 19 29.201 19C28.673 19 28.211 18.8313 27.815 18.494C27.4337 18.1567 27.243 17.7093 27.243 17.152C27.243 16.5947 27.3163 15.6267 27.463 14.248C27.6097 12.8547 27.683 11.74 27.683 10.904C27.683 8.33733 27.4997 6.05667 27.133 4.062C29.113 3.51933 30.9977 3.248 32.787 3.248C36.0577 3.248 37.693 4.414 37.693 6.746C37.693 7.77267 37.341 8.74067 36.637 9.65C35.9477 10.5447 35.097 11.168 34.085 11.52ZM49.5663 15.524C49.053 16.5213 48.4076 17.372 47.6303 18.076C46.853 18.78 46.0756 19.132 45.2983 19.132C44.521 19.132 43.9196 18.868 43.4943 18.34C43.0836 17.7973 42.7903 17.108 42.6143 16.272C42.4383 15.4213 42.277 14.5487 42.1303 13.654C41.9983 12.7593 41.7636 11.8867 41.4263 11.036C41.089 10.1853 40.627 9.54733 40.0403 9.122C40.231 8.77 40.517 8.47667 40.8983 8.242C41.2796 7.99267 41.6903 7.868 42.1303 7.868C42.8196 7.868 43.377 8.31533 43.8023 9.21C44.2276 10.09 44.499 11.0653 44.6163 12.136C44.7483 13.2067 44.8876 14.248 45.0343 15.26C45.1956 16.2573 45.379 16.8293 45.5843 16.976C46.083 16.9467 46.5156 16.6313 46.8823 16.03C47.2636 15.414 47.5423 14.6733 47.7183 13.808C48.041 12.224 48.2023 10.9847 48.2023 10.09C48.2023 9.19533 48.1583 8.506 48.0703 8.022C48.5836 7.91933 49.0236 7.868 49.3903 7.868C50.6516 7.868 51.2823 8.46933 51.2823 9.672C51.2823 10.4347 51.121 11.3513 50.7983 12.422C50.4903 13.478 50.0796 14.512 49.5663 15.524ZM52.7398 8.066C53.2091 7.934 53.6785 7.868 54.1478 7.868C54.6318 7.868 55.0425 8.01467 55.3798 8.308C55.7171 8.60133 55.8858 8.98267 55.8858 9.452C55.8858 9.90667 55.8051 10.706 55.6438 11.85C55.4971 12.9793 55.4238 13.8593 55.4238 14.49C55.4238 16.1327 55.5778 17.548 55.8858 18.736C55.4311 18.912 54.9398 19 54.4118 19C53.8838 19 53.4658 18.8827 53.1578 18.648C52.8498 18.3987 52.6958 18.0467 52.6958 17.592C52.6958 17.1227 52.7838 16.36 52.9598 15.304C53.1358 14.248 53.2238 13.3753 53.2238 12.686C53.2238 10.8527 53.0625 9.31267 52.7398 8.066ZM53.0258 3.094C53.5391 2.85933 54.0451 2.742 54.5438 2.742C55.0425 2.742 55.4091 2.874 55.6438 3.138C55.8931 3.38733 56.0178 3.76133 56.0178 4.26C56.0178 4.75867 55.8491 5.19867 55.5118 5.58C55.1891 5.96133 54.7638 6.152 54.2358 6.152C53.1505 6.152 52.6078 5.58733 52.6078 4.458C52.6078 3.95933 52.7471 3.50467 53.0258 3.094ZM60.2392 14.006C60.2392 15.062 60.4079 15.898 60.7452 16.514C61.0826 17.1153 61.6472 17.416 62.4392 17.416C63.2312 17.416 63.8472 17.152 64.2872 16.624C64.7419 16.0813 64.9692 15.4287 64.9692 14.666C65.4679 14.666 65.9006 14.7907 66.2672 15.04C66.6339 15.2893 66.8172 15.634 66.8172 16.074C66.8172 16.9833 66.3332 17.746 65.3652 18.362C64.3972 18.9633 63.3779 19.264 62.3072 19.264C60.6352 19.264 59.4252 18.8167 58.6772 17.922C57.9292 17.0127 57.5552 15.6707 57.5552 13.896C57.5552 12.1213 58.0539 10.6327 59.0512 9.43C60.0632 8.21267 61.4052 7.604 63.0772 7.604C64.2212 7.604 65.1379 7.868 65.8272 8.396C66.5312 8.90933 66.8832 9.716 66.8832 10.816C66.8832 11.9013 66.3846 12.7227 65.3872 13.28C64.4046 13.8227 63.2019 14.094 61.7792 14.094C61.2806 14.094 60.7672 14.0647 60.2392 14.006ZM60.2612 12.268C60.7012 12.356 61.1632 12.4 61.6472 12.4C62.7032 12.4 63.5906 12.202 64.3092 11.806C64.3972 11.454 64.4412 11.1753 64.4412 10.97C64.4412 10.4567 64.2579 10.068 63.8912 9.804C63.5246 9.54 63.0186 9.408 62.3732 9.408C61.7426 9.408 61.1706 9.61333 60.6572 10.024C60.3932 10.7867 60.2612 11.5347 60.2612 12.268ZM68.0345 9.1C68.4891 8.27867 69.1345 7.868 69.9705 7.868C70.5131 7.868 70.9531 8.16133 71.2905 8.748C71.6278 9.32 71.8625 10.0313 71.9945 10.882C72.1411 11.718 72.2585 12.5687 72.3465 13.434C72.5665 15.59 72.8378 16.7707 73.1605 16.976C73.7325 16.8293 74.2385 15.9567 74.6785 14.358C75.1185 12.7447 75.3385 11.5347 75.3385 10.728C75.3385 9.90667 75.2945 9.254 75.2065 8.77C75.7198 8.66733 76.1598 8.616 76.5265 8.616C77.7878 8.616 78.4185 9.21733 78.4185 10.42C78.4185 12.2973 78.5138 13.83 78.7045 15.018C78.9098 16.1913 79.1518 16.888 79.4305 17.108C79.8411 17.0787 80.1931 16.756 80.4865 16.14C80.7798 15.524 80.9925 14.776 81.1245 13.896C81.3738 12.2387 81.4985 10.97 81.4985 10.09C81.4985 9.19533 81.4545 8.506 81.3665 8.022C81.8798 7.91933 82.3198 7.868 82.6865 7.868C83.9478 7.868 84.5785 8.46933 84.5785 9.672C84.5785 10.4347 84.4245 11.3587 84.1165 12.444C83.8085 13.5147 83.4051 14.5633 82.9065 15.59C82.4078 16.602 81.7991 17.4673 81.0805 18.186C80.3765 18.9047 79.6725 19.264 78.9685 19.264C78.1618 19.264 77.5531 18.6627 77.1425 17.46C76.8198 16.5507 76.5558 15.37 76.3505 13.918C76.2185 14.402 76.1231 14.754 76.0645 14.974C76.0058 15.194 75.9031 15.524 75.7565 15.964C75.6098 16.404 75.4778 16.7413 75.3605 16.976C75.2431 17.2107 75.0818 17.4893 74.8765 17.812C74.6858 18.1347 74.4878 18.3693 74.2825 18.516C73.7691 18.9267 73.1971 19.132 72.5665 19.132C71.9505 19.132 71.4371 18.8533 71.0265 18.296C70.6305 17.7387 70.3518 17.0273 70.1905 16.162C70.0438 15.2967 69.9118 14.4093 69.7945 13.5C69.5158 11.1827 68.9291 9.716 68.0345 9.1ZM93.1026 11.52C93.7626 12.9133 94.5986 14.1307 95.6106 15.172C96.6226 16.2133 97.6273 16.888 98.6246 17.196C98.6246 17.812 98.4633 18.2887 98.1406 18.626C97.8179 18.9633 97.3559 19.132 96.7546 19.132C95.9773 19.132 95.0899 18.6333 94.0926 17.636C93.0953 16.624 92.2226 15.436 91.4746 14.072C90.7413 12.6933 90.3086 11.4833 90.1766 10.442C91.2326 10.442 92.0979 10.1633 92.7726 9.606C93.4619 9.034 93.8066 8.22733 93.8066 7.186C93.8066 5.866 92.9853 5.206 91.3426 5.206C90.8146 5.206 90.1693 5.294 89.4066 5.47C89.3039 7.45 89.2526 9.04867 89.2526 10.266C89.2526 14.1673 89.4066 16.9907 89.7146 18.736C89.2453 18.912 88.7466 19 88.2186 19C87.6906 19 87.2286 18.8313 86.8326 18.494C86.4513 18.1567 86.2606 17.7093 86.2606 17.152C86.2606 16.5947 86.3339 15.6267 86.4806 14.248C86.6273 12.8547 86.7006 11.74 86.7006 10.904C86.7006 8.33733 86.5173 6.05667 86.1506 4.062C88.1306 3.51933 90.0153 3.248 91.8046 3.248C95.0753 3.248 96.7106 4.414 96.7106 6.746C96.7106 7.77267 96.3586 8.74067 95.6546 9.65C94.9653 10.5447 94.1146 11.168 93.1026 11.52Z" fill="black"/>
                                                            <path d="M105.93 8.14C105.015 8.14 104.273 7.818 103.704 7.174C103.135 6.52067 102.85 5.55467 102.85 4.276C102.85 3.00667 103.13 2.036 103.69 1.364C104.25 0.692 105.034 0.356 106.042 0.356C106.593 0.356 107.05 0.454 107.414 0.649999C107.787 0.836667 108.095 1.12133 108.338 1.504H108.422C108.469 1.34533 108.529 1.17267 108.604 0.985999C108.679 0.799333 108.767 0.636 108.87 0.496H109.836C109.771 0.701333 109.71 0.972 109.654 1.308C109.598 1.644 109.556 1.99867 109.528 2.372C109.5 2.74533 109.486 3.1 109.486 3.436V6.348C109.486 6.63733 109.542 6.84267 109.654 6.964C109.766 7.076 109.901 7.132 110.06 7.132C110.135 7.132 110.214 7.12267 110.298 7.104C110.382 7.08533 110.443 7.07133 110.48 7.062V7.958C110.415 7.99533 110.307 8.03267 110.158 8.07C110.009 8.11667 109.855 8.14 109.696 8.14C109.351 8.14 109.066 8.056 108.842 7.888C108.627 7.72 108.469 7.42133 108.366 6.992H108.268C108.053 7.30933 107.769 7.58 107.414 7.804C107.059 8.028 106.565 8.14 105.93 8.14ZM106.14 7.118C106.915 7.118 107.461 6.89867 107.778 6.46C108.105 6.012 108.268 5.30733 108.268 4.346V4.262C108.268 3.32867 108.114 2.61933 107.806 2.134C107.507 1.63933 106.947 1.392 106.126 1.392C105.445 1.392 104.941 1.63933 104.614 2.134C104.287 2.62867 104.124 3.34733 104.124 4.29C104.124 5.22333 104.283 5.928 104.6 6.404C104.927 6.88 105.44 7.118 106.14 7.118Z" fill="black"/>
                                                        </svg>  provides you a live-coding environment where you can create your rooms and code{"</>"}, chat💬, edit📝, and draw✍ at the same time.</p> <p>This is the solution for all your team programming contest as here you can easily work together and devise the solution to problem quicker.</p> </div>
            </div>

        </>
    )
}

export default Home
